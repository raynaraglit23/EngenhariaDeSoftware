name: CI - Continuous Integration

on:
  push:
    branches: [ main, develop, pipeline-cd-deploy ]
  pull_request:
    branches: [ main, pipeline-cd-deploy ]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout código
      uses: actions/checkout@v4

    - name: Configurar Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Instalar dependências
      run: npm ci

    - name: Verificar lint (ESLint)
      run: npm run lint --if-present

    - name: Executar testes
      run: npm test --if-present

    - name: Build da aplicação
      run: npm run build

    - name: Upload dos artifacts de build
      uses: actions/upload-artifact@v4
      with:
        name: dist-files
        path: dist/

  docker:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: Checkout código
      uses: actions/checkout@v4

    - name: Configurar Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login no Docker Hub
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.MARTENIER }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Extrair metadados
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ secrets.MARTENIER }}/react-app
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=sha,prefix={{branch}}-

    - name: Build e push da imagem Docker
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max